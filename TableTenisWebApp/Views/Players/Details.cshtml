@model TableTenisWebApp.Models.Player

@{
    ViewData["Title"] = "Statystyki zawodnika";
    var matches = ViewBag.Matches as List<TableTenisWebApp.Models.Match>;
    int wins = ViewBag.Wins;
    int loses = ViewBag.Loses;
    int setsWon = ViewBag.SetsWon;
    int setsLost = ViewBag.SetsLost;
}


<h2>@Model.Name</h2>

<table class="table table-bordered w-auto">
    <tr>
        <th>Wygrane mecze</th>
        <td class="fw-bold text-success">@wins</td>
    </tr>
    <tr>
        <th>Przegrane mecze</th>
        <td class="fw-bold text-danger">@loses</td>
    </tr>
    <tr>
        <th>Bilans setów</th>
        <td class="fw-bold">@setsWon : @setsLost</td>
    </tr>
    <tr>
        <th>Łącznie rozegrane mecze</th>
        <td>@(wins + loses)</td>
    </tr>
</table>

<h4>Historia meczów:</h4>
@if (matches != null && matches.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Data</th>
                <th>Przeciwnik</th>
                <th>Wynik</th>
                <th>Turniej</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var match in matches)
            {
                var isPlayer1 = match.Player1Id == Model.Id;
                var opponent = isPlayer1 ? match.Player2 : match.Player1;
                var myScore = isPlayer1 ? match.Score1 : match.Score2;
                var oppScore = isPlayer1 ? match.Score2 : match.Score1;

                <tr class="clickable-row" data-href="@Url.Action("Details", "Matches", new { id = match.Id })">
                    <td>@match.DatePlayed?.ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (opponent != null)
                        {
                            <a asp-controller="Players" asp-action="Details" asp-route-id="@opponent.Id" class="entity-link">
                                @opponent.Name
                            </a>

                        }
                        else
                        {
                            <span>Nieznany</span>
                        }
                    </td>
                    <td>
                        <span class="fw-bold @(myScore > oppScore ? "text-success" : "text-danger")">
                            @myScore : @oppScore
                        </span>
                    </td>
                    <td>
                        @if (match.Tournament != null)
                        {
                            <a asp-controller="Tournaments" asp-action="Details" asp-route-id="@match.Tournament.Id" class="entity-link">
                                @match.Tournament.Name
                            </a>

                        }
                    </td>
                    <td>
                        <a asp-controller="Matches" asp-action="Details" asp-route-id="@match.Id" class="btn btn-sm btn-outline-primary">
                            Szczegóły
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Brak rozegranych meczów.</p>
}

@{
    string backUrl = null;

    var refererRaw = Context.Request.Headers["Referer"].ToString();
    if (!string.IsNullOrEmpty(refererRaw))
    {
        if (Uri.TryCreate(refererRaw, UriKind.Absolute, out var refUri))
        {
            var req = Context.Request;
            var sameHost = string.Equals(refUri.Host, req.Host.Host, StringComparison.OrdinalIgnoreCase);
            if (sameHost)
            {
                backUrl = refUri.PathAndQuery;
            }
        }
        else if (Url.IsLocalUrl(refererRaw))
        {
            backUrl = refererRaw;
        }
    }
}

@if (!string.IsNullOrEmpty(backUrl))
{
    <a href="@backUrl" class="btn btn-outline-secondary">↩ Wróć</a>
}

